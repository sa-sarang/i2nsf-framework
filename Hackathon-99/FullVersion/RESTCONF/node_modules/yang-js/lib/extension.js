// Generated by CoffeeScript 1.12.2
(function() {
  var Expression, Extension,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Expression = require('./expression');

  Extension = (function(superClass) {
    extend(Extension, superClass);

    Extension.scope = {
      argument: '0..1',
      description: '0..1',
      reference: '0..1',
      status: '0..1'
    };

    function Extension(name, spec) {
      if (spec == null) {
        spec = {};
      }
      if (spec.scope == null) {
        spec.scope = {};
      }
      Extension.__super__.constructor.call(this, 'extension', name, spec);
    }

    return Extension;

  })(Expression);

  module.exports = Extension;

}).call(this);
