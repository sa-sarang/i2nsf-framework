// Generated by CoffeeScript 1.12.2
(function() {
  var crypto;

  require('../..');

  crypto = require('crypto');

  module.exports = require('../../schema/ietf-yang-library@2016-06-21.yang').bind({
    '/modules-state': function() {
      var feature, hash, include, keys, module, modules, namespace, prev, ref, revision;
      modules = (function() {
        var i, len, ref, ref1, results;
        ref = this.schema.constructor.module;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          module = ref[i];
          revision = module.revision, namespace = module.namespace, feature = module.feature, include = module.include;
          results.push({
            name: module.tag,
            revision: (ref1 = revision != null ? revision[0].tag : void 0) != null ? ref1 : '',
            namespace: namespace != null ? namespace.tag : void 0,
            feature: feature != null ? feature.map(function(x) {
              return x.tag;
            }) : void 0,
            'conformance-type': 'implement',
            submodule: include != null ? include.map(function(x) {
              var ref2, ref3;
              return {
                name: x.tag,
                revision: (ref2 = (ref3 = x['revision-date']) != null ? ref3.tag : void 0) != null ? ref2 : ''
              };
            }) : void 0
          });
        }
        return results;
      }).call(this);
      keys = modules.map(function(x) {
        return x.name;
      });
      hash = crypto.createHash('md5').update(keys.join(',')).digest('hex');
      if (hash == null) {
        return;
      }
      prev = (ref = this.content) != null ? ref['module-set-id'] : void 0;
      if (hash !== prev) {
        this.debug("trigger yang-library-change notification");
        this.debug(keys);
      }
      return this.content = {
        'module-set-id': hash,
        module: modules
      };
    }
  });

}).call(this);
